<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>ControlFloor</title>

<link rel="stylesheet" href="https://cdn.materialdesignicons.com/4.9.95/css/materialdesignicons.min.css" />
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto&display=swap" />
<link rel="stylesheet" href="/assets/css/styles.css" />
<link rel="stylesheet" href="/assets/css/sidebar.css" />
		
<meta charset="utf-8">
<style>
  canvas {
    border: solid 1px black;
  }
</style>
<script>
  function getel( id ) {
    return document.getElementById( id );
  }
  function getCursorPosition(canvas, event) {
    const rect = canvas.getBoundingClientRect()
    const x = event.clientX - rect.left
    const y = event.clientY - rect.top
    console.log("x: " + x + " y: " + y)
    return [x,y];
  }
  var session='';
  var udid="{{ html .udid }}";
  var clickWid={{ html .clickWidth }};
  var clickHeg={{ html .clickHeight }};
  var myTarget='';
  function req( type, url, handler, body ) {
    var xhr = new XMLHttpRequest();
    xhr.open( type, url, true );
    xhr.responseType = 'json';
    xhr.onload = function(x) { handler(x,xhr); }
    if( type == 'POST' && body ) {
        if( typeof( body ) == 'object' ) {
            var data = new FormData();
            var test = {};
            for( var k in body ) if( body.hasOwnProperty( k ) ) { data.append( k, body[k] ); test[k] = body[k]; }
            console.log( test );
            xhr.send( data );
        }
        else xhr.send(body);
    }
    else xhr.send();
  }
  function clickAt( pos ) {
    var x = Math.floor( (pos[0]/(750/2))*clickWid ); 
    var y = Math.floor( (pos[1]/(1334/2))*clickHeg );
    var base = document.location.protocol + '//' + document.location.host;
    req( 'POST', base + '/devClick', function() {}, { udid, x, y } );    
  }
  function swipe( pos1, pos2 ) {
    var x1 = Math.floor( (pos1[0]/(750/2))*clickWid ); 
    var y1 = Math.floor( (pos1[1]/(1334/2))*clickHeg );
    var x2 = Math.floor( (pos2[0]/(750/2))*clickWid ); 
    var y2 = Math.floor( (pos2[1]/(1334/2))*clickHeg );
    var base = document.location.protocol + '//' + document.location.host;
    req( 'POST', base + '/devSwipe', function() {}, { udid, x1, y1, x2, y2 } );    
  }
  window.addEventListener("load", function(evt) {
    var canvas = getel("canvas");
    var ctx    = canvas.getContext("2d");
    var home   = getel("home");
    var ws;
    var pos1;
    
    home.onclick = function( event ) {
      req( 'POST', '/devHome', function() {}, { udid } );  
    }

    canvas.onmousedown = function( event ) {
      myTarget = event.target;
      pos1 = getCursorPosition( canvas, event );
    }
    
    canvas.onmouseup = function( event ) {
      var pos2 = getCursorPosition( canvas, event );
      var dx = Math.abs( pos2[0] - pos1[0] );
      var dy = Math.abs( pos2[1] - pos1[1] );
      if( dx > 3 || dy > 3 ) {
        swipe( pos1, pos2 );
      }
      else clickAt( pos1 );
    }

    var wsprot = ( document.location.protocol == 'https:' ) ? "wss" : "ws"; 
    var url = wsprot+":\/\/"+document.location.host+"\/imgStream?udid={{ html .udid }}";
    ws = new WebSocket( url );
    ws.onopen = function( event ) {
        console.log("Websocket open");
    }
    ws.onclose = function( event ) {
        console.log("Websocket closed");
        ws = null;
    }
    ws.onmessage = function( event ) {
        if( event.data instanceof Blob ) {
          var image = new Image();
          var url;
          image.onload = function() {
            ctx.drawImage(image, 0, 0, 750/2, 1334/2 );
            URL.revokeObjectURL( url );
          };
          image.onerror = function( e ) {
            console.log('Error during loading image:', e);
          }
          var blob = event.data;
          
          url = URL.createObjectURL( blob );
          image.src = url;
        }
        else {
            console.log( event.data );
        }
    }
    ws.onerror = function( event ) {
        console.log( "Error: ", event.data );
    }
  });

  window.onload = function() {
    var canvas = getel("canvas");
    document.addEventListener('keydown', function(event) {
      if(myTarget == canvas) {
         console.log('event!');
         console.log(event.key);
         var key = event.key;
         var base = document.location.protocol + '//' + document.location.host;
         req( 'POST', base + '/devKeyPress', function() {}, { udid, key } ); 
      }
   }, false);
  }
</script>
</head>

<body>
    {{template "sidebar" dict "udid" .udid }}
    <div class="main">
       <canvas id="canvas" width="375" height="667"></canvas><br>
       <div style="width:375px; font-size: 32px"><center><i id='home' class="mdi mdi-home"></i></div>
    </div>
</body>
</html>
